# NOTE: update this with your service name
service: amcp-chess-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: eu-central-1

  environment:
    UsersTableName: Users-${self:custom.stage}
    FastGamePlayersTableName: FastGamePlayers-${self:custom.stage}
    GamesArchiveTableName: GamesArchive-${self:custom.stage}
    OpenRoomsTableName: OpenRooms-${self:custom.stage}
    HiddenRoomsTableName: HiddenRooms-${self:custom.stage}
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  #environment:
  #  sampleEnvVar: ${env:SAMPLE_ENV_VAR}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - "Fn::GetAtt": [ Users, Arn ]
        - "Fn::GetAtt": [ FastGamePlayers, Arn ]
        - "Fn::GetAtt": [ GamesArchive, Arn ]
        - "Fn::GetAtt": [ OpenRooms, Arn ]
        - "Fn::GetAtt": [ HiddenRooms, Arn ]

functions:
  list-fast-game-players:
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: url path is /notes
    # - method: GET request
    handler: list-fast-game-players.main
    events:
      - http:
          path: games
          method: get
          cors: true
          authorizer: aws_iam

resources:
  # API Gateway Errors
  # - ${file(resources/api-gateway-errors.yml)}
  # DynamoDB
  - ${file(resources/dynamodb-tables.yml)}
  # Cognito
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}
